// <auto-generated />
using System;
using Food.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Food.DataBase.Migrations
{
    [DbContext(typeof(FoodDBContext))]
    [Migration("20230529234811_Add_Pin_Order")]
    partial class Add_Pin_Order
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("food")
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Food.Domain.Interface.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(3);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Categories", "food");
                });

            modelBuilder.Entity("Food.Domain.Interface.Entities.DishEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(4);

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<int>("IdRestaurant")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<int>("Precio")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<string>("urlImagen")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdRestaurant");

                    b.ToTable("Dishes", "food");
                });

            modelBuilder.Entity("Food.Domain.Interface.Entities.OrderDishEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int>("IdPedido")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("IdPlato")
                        .HasMaxLength(100)
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdPlato");

                    b.ToTable("OrderDishes", "food");
                });

            modelBuilder.Entity("Food.Domain.Interface.Entities.OrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DishEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<int?>("IdChef")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("IdRestaurante")
                        .HasColumnType("int");

                    b.Property<string>("Pin")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("DishEntityId");

                    b.HasIndex("IdChef");

                    b.HasIndex("IdRestaurante")
                        .IsUnique();

                    b.ToTable("Orders", "food");
                });

            modelBuilder.Entity("Food.Domain.Interface.Entities.RestaurantEmployeeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("IdRestaurante")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("RestaurantEmployees", "food");
                });

            modelBuilder.Entity("Food.Domain.Interface.Entities.RestaurantEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(4);

                    b.Property<int?>("IdPropietario")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<int>("Nit")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnOrder(6);

                    b.Property<string>("urlLogo")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.ToTable("Restaurants", "food");
                });

            modelBuilder.Entity("Food.Domain.Interface.Entities.DishEntity", b =>
                {
                    b.HasOne("Food.Domain.Interface.Entities.CategoryEntity", "Category")
                        .WithMany("Dishes")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Food.Domain.Interface.Entities.RestaurantEntity", "Restaurant")
                        .WithMany("Dishes")
                        .HasForeignKey("IdRestaurant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Food.Domain.Interface.Entities.OrderDishEntity", b =>
                {
                    b.HasOne("Food.Domain.Interface.Entities.OrderEntity", "Order")
                        .WithMany("OrderDishes")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Food.Domain.Interface.Entities.DishEntity", "Dish")
                        .WithMany()
                        .HasForeignKey("IdPlato");

                    b.Navigation("Dish");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Food.Domain.Interface.Entities.OrderEntity", b =>
                {
                    b.HasOne("Food.Domain.Interface.Entities.DishEntity", null)
                        .WithMany("Orders")
                        .HasForeignKey("DishEntityId");

                    b.HasOne("Food.Domain.Interface.Entities.RestaurantEmployeeEntity", "restaurantEmployee")
                        .WithMany()
                        .HasForeignKey("IdChef");

                    b.HasOne("Food.Domain.Interface.Entities.RestaurantEntity", "restaurant")
                        .WithOne("Order")
                        .HasForeignKey("Food.Domain.Interface.Entities.OrderEntity", "IdRestaurante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("restaurant");

                    b.Navigation("restaurantEmployee");
                });

            modelBuilder.Entity("Food.Domain.Interface.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("Food.Domain.Interface.Entities.DishEntity", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Food.Domain.Interface.Entities.OrderEntity", b =>
                {
                    b.Navigation("OrderDishes");
                });

            modelBuilder.Entity("Food.Domain.Interface.Entities.RestaurantEntity", b =>
                {
                    b.Navigation("Dishes");

                    b.Navigation("Order")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
